const { MessageEmbed } = require('discord.js');
const BaseCommand = require('../../utils/structures/BaseCommand');
const StateManager = require('../../utils/StateManager');



const os = require("os"), platform = os.type() + " (" + os.release() + ")", djsversion = require("../../../package.json").dependencies["discord.js"];

let guilds = 0, users = 0, shardCount = 0, memory = 0, memoryUsage = "0MB", memoryGlobal = 0, memoryUsageGlobal = "0MB", nextUpdate = Date.now();



module.exports = class InfoCommand extends BaseCommand {
    constructor () {
        super('info', 'misc', []);
        this.connection = StateManager.connection;
        
    }

    async run(client, message, args, config, gdb, prefix, permissionLevel, db) {


      if (nextUpdate < Date.now()) {
        nextUpdate = Date.now() + 300000
        if (client.shard) {
          guilds = await client.shard.fetchClientValues('guilds.size').then(res => res.reduce((prev, val) => prev + val, 0))
          users = await client.shard.fetchClientValues('users.size').then(res => res.reduce((prev, val) => prev + val, 0))
          shardCount = client.shard.count
        } else {
          guilds = client.guilds.cache.size
          users = client.users.cache.size
          shardCount = 0
        }
    
        memory = process.memoryUsage().heapUsed / (1048576) // 1024*1024
        if (memory >= 1024) memoryUsage = (memory / 1024).toFixed(2) + "GB"
        else memoryUsage = memory.toFixed(2) + "MB"
    
        memoryGlobal = (os.totalmem() - os.freemem()) / (1048576) // 1024*1024
        if (memoryGlobal >= 1024) memoryUsageGlobal = (memoryGlobal / 1024).toFixed(2) + "GB"
        else memoryUsageGlobal = memoryGlobal.toFixed(2) + "MB"
      }
      
      this.connection.query (
        'SELECT * FROM `botconfigs`', function (error, rows, results, fields) {
            // console.log(rows);

            let botname = rows[0].BotName;
            let author = rows[0].BotAuthor;
            let version = rows[0].BotVersion;


            message.channel.send({
              "embed": {
                "title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–æ—Ç–∞ - " + client.user.tag,
                "description": `–ü—Ä–∏–≤–µ—Ç, —è  ${botname}. –Ø –º–∏–ª–∞—è —Ç—è–Ω-–±–æ—Ç —Å –∫—É—á–µ–π –≤—Å—è–∫–∏—Ö –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–µ–π.`,
                // "color": config.color,
                "icon_url": 'https://sun9-23.userapi.com/c851124/v851124088/132a95/kLBwxl3m3bE.jpg',
                "timestamp": Date.now(),
                "url": 'https://github.com/tEloreKZ/Ephoria',
                "footer": {
                  "icon_url": message.author.displayAvatarURL,
                  "text": "–ó–∞–ø—Ä–æ—Å–∏–ª " + message.author.tag
                },
                "fields": [
                  {
                    "name": "üí† –•–æ—Å—Ç",
                    "value": [
                      "**–û–°**: `" + platform + "`",
                      "**–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞**: `discord.js" + djsversion + "`",
                      "**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏**: `" + (client.shard ? memoryUsageGlobal : memoryUsage) + "`"
                    ].join("\n"),
                    "inline": true
                  },
                  {
                    "name": "üåÄ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    "value": [
                      "**–°–µ—Ä–≤–µ—Ä–æ–≤**: `" + guilds + "`",
                      "**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**: `" + users + "`",
                      // "**Shard Count**: `" + shardCount + "`"
                    ].join("\n"),
                    "inline": true
                  },
                  {
                    "name": "üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    "value": [
                      `**–ê–≤—Ç–æ—Ä**: <@293017471223595010>`,
                      "**–í–µ—Ä—Å–∏—è**: `" + version + "`"
                    ].join("\n"),
                    "inline": false
                  },
                  {
                    "name": "üåê –°—Å—ã–ª–∫–∏",
                    "value": [
                      "**–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:** https://github.com/tEloreKZ/Ephoria",
                      "**–ü—Ä–∏–≥–ª–∞—Å–∏ –º–µ–Ω—è:** [https://discordapp.com/api/oauth2/authorize?...](https://discordapp.com/api/oauth2/authorize?client_id=" + client.user.id + "&permissions=805432400&scope=bot)",
                      "**–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã**: `" + msToTime(client.uptime) + "`",
                      "**–ò—Å—Ö–æ–¥–Ω–∏–∫–∏**: https://github.com/tEloreKZ/Ephoria"
                    ].join("\n"),
                    "inline": false
                  },
                ].filter(f => f.name) // –±–∞–∑–æ–≤—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è shared –ø–æ–ª—è
              }
            }).catch(() => message.channel.send("üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –£ –≤–∞—Å –µ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ?"));



        });


      
    
      
    }

  }


  function msToTime(ms){
    days = Math.floor(ms / 86400000); // 24*60*60*1000
    daysms = ms % 86400000; // 24*60*60*1000
    hours = Math.floor(daysms / 3600000); // 60*60*1000
    hoursms = ms % 3600000; // 60*60*1000
    minutes = Math.floor(hoursms / 60000); // 60*1000
    minutesms = ms % 60000; // 60*1000
    sec = Math.floor(minutesms / 1000);
  
    let str = "";
    if (days) str = str + days + "d";
    if (hours) str = str + hours + "h";
    if (minutes) str = str + minutes + "m";
    if (sec) str = str + sec + "s";
  
    return str;
  }